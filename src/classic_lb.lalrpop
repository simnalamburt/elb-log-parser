//! #### Reference
//! - https://docs.aws.amazon.com/en_us/elasticloadbalancing/latest/classic/access-log-collection.html#access-log-entry-syntax
use crate::ClassicLBLog;

grammar;

match {
    r"[0-9]+"
} else {
    _
}

// TODO: Implement
// TODO: pub(crate)로 바꾸고  FromStr 구현
// TODO: validate
pub Log: ClassicLBLog<'input> =
    <timestamp:Timestamp>
    <elb:Name>
    <client:IPAndPort>
    <backend:NullableIPAndPort>
    <request_processing_time:ProcessingTime>
    <backend_processing_time:ProcessingTime>
    <response_processing_time:ProcessingTime>
    <elb_status_code:Int>
    <backend_status_code:Int>
    <received_bytes:Int>
    <sent_bytes:Int>
    // TODO
    //<request:QuotedString>
    //<user_agent:QuotedString>
    //pub ssl_cipher: &'input str,
    //pub ssl_protocol: &'input str,
=> ClassicLBLog { <> };

Timestamp = r"[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{6}Z";
Name = r"[0-9A-Za-z][0-9A-Za-z\-]{0,30}[0-9A-Za-z]|[0-9A-Za-z]";

// TODO: Support not only IPv4 but also IPv6 https://datatracker.ietf.org/doc/html/rfc5952
IPAndPort = r"[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:[0-9]{1,5}";
NullableIPAndPort = { "-", IPAndPort };

Int = r"[0-9]+";
ProcessingTime = { Int, r"[0-9]+\.[0-9]+", "-1" };

// TODO
pub(crate) Test: () = {
    "Timestamp" Timestamp => (),
    "Name" Name => (),
    "IPAndPort" IPAndPort => (),
    "NullableIPAndPort" NullableIPAndPort => (),
    "Int" Int => (),
    "ProcessingTime" ProcessingTime => (),
}
